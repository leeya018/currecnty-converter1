{"version":3,"sources":["CurrencyRow.jsx","App.jsx","index.js"],"names":["Converter","props","currenciesOptions","selectedCurrency","setSelectedCurrency","amount","onChangeAmount","className","type","value","onChange","name","id","map","option","key","BASE_URL","App","fromAmount","toAmount","useState","setCurrenciesOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","setAmount","amountInFromCurrncy","setAmountInFromCurrncy","exchangeRate","setExchangeRate","useEffect","EXCHANGE_URL","fetch","then","res","json","data","rates","console","log","firstCurrency","Object","keys","base","e","target","ReactDOM","render","document","getElementById"],"mappings":"iMAGe,SAASA,EAAUC,GAAQ,IAEtCC,EAKED,EALFC,kBACAC,EAIEF,EAJFE,iBACAC,EAGEH,EAHFG,oBACAC,EAEEJ,EAFFI,OACAC,EACEL,EADFK,eAEF,OACE,yBAAKC,UAAU,aACb,2BAAOA,UAAU,QACfC,KAAK,SACLC,MAAOJ,EACPK,SAAUJ,IAEZ,4BAAQC,UAAU,YAAYI,KAAK,GAAGC,GAAG,GACvCH,MAAON,EACPO,SAAUN,GAERF,EAAkBW,KAAI,SAAAC,GAAM,OAC1B,4BAAQC,IAAKD,EAAQL,MAAOK,GAAUA,EAAtC,UCnBZ,IAAME,EAAW,yCA+EFC,MA7Ef,WAAgB,IAQVC,EAAYC,EARH,EACqCC,mBAAS,IAD9C,mBACNlB,EADM,KACamB,EADb,OAE2BD,qBAF3B,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAIeL,mBAAS,GAJxB,mBAINf,EAJM,KAIEqB,EAJF,OAKyCN,oBAAS,GALlD,mBAKNO,EALM,KAKeC,EALf,OAM2BR,qBAN3B,mBAMNS,EANM,KAMQC,EANR,KAwDb,OA9CIH,GACFT,EAAab,EACbc,EAAWd,EAASwB,IAEpBV,EAAWd,EACXa,EAAab,EAASwB,GAIxBE,qBAAU,WACR,GAAoB,MAAhBT,GAAsC,MAAdE,EAAoB,CAC9C,IAAIQ,EAAY,UAAMhB,EAAN,iBAAuBM,EAAvB,oBAA+CE,GAC/DS,MAAMD,GAAcE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAClCF,MAAK,SAAAG,GACHP,EAAgBO,EAAKC,MAAMd,UAGhC,CAACF,EAAcE,IAGlBO,qBAAU,WACRE,MAAMjB,GACJkB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACHE,QAAQC,IAAIH,GACZ,IAAII,EAAgBC,OAAOC,KAAKN,EAAKC,OAAO,GAC5CR,EAAgBO,EAAKC,MAAMG,IAC3BlB,EAAgBc,EAAKO,MACrBnB,EAAcgB,GACdpB,EAAqB,CAACgB,EAAKO,MAAP,mBAAgBF,OAAOC,KAAKN,EAAKC,eAExD,IAgBD,yBAAK/B,UAAU,OACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAD,CACEL,kBAAmBA,EACnBC,iBAAkBmB,EAClBlB,oBAAqB,SAACyC,GAAD,OAAOtB,EAAgBsB,EAAEC,OAAOrC,QACrDH,eAnBN,SAAgCuC,GAC9BnB,EAAUmB,EAAEC,OAAOrC,OACnBmB,GAAuB,IAkBnBvB,OAAQa,IACV,yBAAKX,UAAU,UAAf,KACA,kBAAC,EAAD,CACEL,kBAAmBA,EACnBC,iBAAkBqB,EAClBpB,oBAAqB,SAACyC,GAAD,OAAOpB,EAAcoB,EAAEC,OAAOrC,QACnDH,eApBN,SAA8BuC,GAC5BnB,EAAUmB,EAAEC,OAAOrC,OACnBmB,GAAuB,IAmBnBvB,OAAQc,IAEV,iECxEN4B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.312c98a1.chunk.js","sourcesContent":["import React from 'react'\nimport \"./App.css\"\n\nexport default function Converter(props) {\n  const {\n    currenciesOptions,\n    selectedCurrency,\n    setSelectedCurrency,\n    amount,\n    onChangeAmount\n  } = props\n  return (\n    <div className=\"converter\">\n      <input className=\"input\"\n        type=\"number\"\n        value={amount}\n        onChange={onChangeAmount}\n      />\n      <select className=\"selection\" name=\"\" id=\"\"\n        value={selectedCurrency}\n        onChange={setSelectedCurrency}>\n        {\n          currenciesOptions.map(option => (\n            <option key={option} value={option} >{option} </option>\n          ))}\n      </select>\n    </div>\n  )\n}\n\n\n\n\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport CurrencyRow from \"./CurrencyRow\";\n\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest'\n\nfunction App() {\n  const [currenciesOptions, setCurrenciesOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrncy, setAmountInFromCurrncy] = useState(true)\n  const [exchangeRate, setExchangeRate] = useState()\n\n  let fromAmount, toAmount;\n\n  if (amountInFromCurrncy) {\n    fromAmount = amount\n    toAmount = amount * exchangeRate\n  } else {\n    toAmount = amount\n    fromAmount = amount / exchangeRate\n  }\n\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      let EXCHANGE_URL = `${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`\n      fetch(EXCHANGE_URL).then(res => res.json()).\n        then(data => {\n          setExchangeRate(data.rates[toCurrency])\n        })\n    }\n  }, [fromCurrency, toCurrency])\n  \n\n  useEffect(() => {\n    fetch(BASE_URL).\n      then(res => res.json()).\n      then(data => {\n        console.log(data)\n        let firstCurrency = Object.keys(data.rates)[0]\n        setExchangeRate(data.rates[firstCurrency])\n        setFromCurrency(data.base)\n        setToCurrency(firstCurrency)\n        setCurrenciesOptions([data.base, ...Object.keys(data.rates)])\n      })\n  }, [])\n  \n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrncy(true)\n  }\n\n\n  function handleToAmountChnage(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrncy(false)\n  }\n\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"title\">Convert</h1>\n      <CurrencyRow\n        currenciesOptions={currenciesOptions}\n        selectedCurrency={fromCurrency}\n        setSelectedCurrency={(e) => setFromCurrency(e.target.value)}\n        onChangeAmount={handleFromAmountChange}\n        amount={fromAmount} />\n      <div className=\"equals\">=</div>\n      <CurrencyRow\n        currenciesOptions={currenciesOptions}\n        selectedCurrency={toCurrency}\n        setSelectedCurrency={(e) => setToCurrency(e.target.value)}\n        onChangeAmount={handleToAmountChnage}\n        amount={toAmount}\n      />\n      <p>Copy rights reserved : Lee Yahav</p>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import UseRef from './UseRef';\n// import UseEffect from './UseEffect';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}